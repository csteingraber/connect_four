var search_data = {"index":{"searchIndex":["board","computer","game","human","player","add()","available_spaces()","choose()","choose()","choose()","new()","new()","new()","print_board()","start()","gemfile","gemfile.lock","readme"],"longSearchIndex":["board","computer","game","human","player","board#add()","board#available_spaces()","computer#choose()","human#choose()","player#choose()","board::new()","game::new()","player::new()","board#print_board()","game#start()","","",""],"info":[["Board","","Board.html","","<p>This class contains the Connect Four board in the form of a 2D Array with\nunicode characters as the elements. …\n"],["Computer","","Computer.html","","<p>This class inherits from the Player\n<p>class and focuses on its own implementation of the choose method. …\n"],["Game","","Game.html","","<p>This class acts as the container for all componenets of the game: the\nboard, the human  player, and the …\n"],["Human","","Human.html","","<p>This class inherits from the Player\n<p>class and focuses on its own implementation of the choose method. …\n"],["Player","","Player.html","","<p>This class acts as a super class to the Human and Computer classes and\ncontains memory and behavior corresponding …\n"],["add","Board","Board.html#method-i-add","(piece, index)","<p>Changes the lowest possible point in the column specified by index to the\nunicode value referenced  by …\n"],["available_spaces","Board","Board.html#method-i-available_spaces","()","<p>Returns an array whose elements correspond to the indexes of the open\ncolumns on the board.\n"],["choose","Computer","Computer.html#method-i-choose","(free = [0, 1, 2, 3, 4, 5, 6])","<p>Returns a random value between 0-6  corresponding to a free column where \nthe piece will be dropped. …\n"],["choose","Human","Human.html#method-i-choose","(free = [0, 1, 2, 3, 4, 5, 6])","<p>Returns a value between 0-6 corresponding  to the column where the piece\nwill be dropped.\n"],["choose","Player","Player.html#method-i-choose","(free = [0, 1, 2, 3, 4, 5, 6])","<p>This method will be overwritten by the  Human and Computer classes and will\nreturn  a value corresponding …\n"],["new","Board","Board.html#method-c-new","()","<p>Creates a 2D Array of unicode characters  representing the board.\n"],["new","Game","Game.html#method-c-new","()",""],["new","Player","Player.html#method-c-new","(color)",""],["print_board","Board","Board.html#method-i-print_board","()",""],["start","Game","Game.html#method-i-start","()",""],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p>gem “rspec”\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  diff-lcs (1.3)\n  rspec (3.5.0)\n    rspec-core (~&gt; 3.5.0)\n  ...</pre>\n"],["README","","README_md.html","","<p>Connect Four\n<p>This project showcases Object Oriented design in Ruby and TDD using RSpec.\nThis is part of …\n"]]}}